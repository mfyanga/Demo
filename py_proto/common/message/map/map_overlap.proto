syntax = "proto2";

package citibot.common.hdmap;

import "common/message/geometry.proto";
import "common/message/map/map_id.proto";
import "common/message/map/map_geometry.proto";

message LaneOverlapInfo {
  optional double start_s = 1;  // position (s-coordinate)
  optional double end_s = 2;    // position (s-coordinate)
  optional bool is_merge = 3;

  optional Id region_overlap_id = 4;
}

message SignalOverlapInfo {
}

message StopSignOverlapInfo {
}

message CrosswalkOverlapInfo {
  optional Id region_overlap_id = 1;
}

message JunctionOverlapInfo {
}

message YieldOverlapInfo {
}

message ClearAreaOverlapInfo {
}

message SpeedBumpOverlapInfo {
}

message ParkingSpaceOverlapInfo {
}

message PNCJunctionOverlapInfo {
}

message RegionOverlapInfo {
  optional Id id = 1;
  repeated message.Polygon polygon = 2;
}

message MarkPointOverlapInfo {
}

message RemarkOverlapInfo{
}

message MarkPolygonOverlapInfo{
}

message MarkLineOverlapInfo{
}

message StationOverlapInfo{
}

// by DiMai
message LocationOverlapInfo{
}

// Information about one object in the overlap.
message ObjectOverlapInfo {
  optional Id id = 1;

  oneof overlap_info {
    LaneOverlapInfo lane_overlap_info = 3;
    SignalOverlapInfo signal_overlap_info = 4;
    StopSignOverlapInfo stop_sign_overlap_info = 5;
    CrosswalkOverlapInfo crosswalk_overlap_info = 6;
    JunctionOverlapInfo junction_overlap_info = 7;
    YieldOverlapInfo yield_sign_overlap_info = 8;
    ClearAreaOverlapInfo clear_area_overlap_info = 9;
    SpeedBumpOverlapInfo speed_bump_overlap_info = 10;
    ParkingSpaceOverlapInfo parking_space_overlap_info = 11;
    PNCJunctionOverlapInfo pnc_junction_overlap_info = 12;
    MarkPointOverlapInfo mark_point_overlap_info = 21;
    RemarkOverlapInfo remark_overlap_info = 22;
    MarkPolygonOverlapInfo mark_polygon_overlap_info = 23;
    LocationOverlapInfo location_overlap_info = 24; // by DiMai
    MarkLineOverlapInfo mark_line_overlap_info = 25;
    StationOverlapInfo station_overlap_info = 26;
  }
}

// Here, the "overlap" includes any pair of objects on the map
// (e.g. lanes, junctions, and crosswalks).
message Overlap {
  optional Id id = 1;

  // Information about one overlap, include all overlapped objects.
  repeated ObjectOverlapInfo object = 2;

  repeated RegionOverlapInfo region_overlap = 3;
  optional citibot.common.message.PointENU point = 4; // by DiMai
}